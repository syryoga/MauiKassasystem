@page "/"
@inject DatabaseContext dbContext

<div class="wrapper">
    <div class="topbar">
        <div class="logo-wrapper">
            <a href="#"><img src="drawable/Logo_BBRZ.png" alt="BBRZ" height="50" /></a>
        </div>
        <h1 class="pagename">Kassasystem</h1>
        <div class="topbar-btn-wrapper">

            <Button Href="/tages-abschluss"
                    Icon="icon-clipboard"
                    Name="TAGESABSCHLUSS" />

            <Button 
                    Icon="icon-bin"
                    Name="STORNO"
                    OnClickAction="ShowPopup"/>

            <Button Href="/login-admin"
                    Icon="icon-user"
                    Name="ADMIN" />

        </div>
    </div>
    <div class="main">
        <div class="main-wrapper">
            <div class="beschreibung-box">
                <div>Kategorie</div>
                <div>Produkt</div>
                <div>Bestellung</div>
            </div>
            
            <div class="light-box kategorie-box">
                @if (kategories != null)
                {
                    <div class="kategorie-wrapper">
                        @foreach (var kategorie in kategories)
                        {
                            <div class="kategorie" @onclick="() => ShowId(kategorie.Id)">
                                
                                <img src="@kategorie.KategorieBild">
                                <div>@kategorie.KategorieName</div>
                            </div>
                        }
                    </div>
                }
            </div>
            <div class="light-box produkt-box">

                @if (curentCategory > 0)
                {
                    <div class="produkt-wrapper">
                       @* @foreach (var product in alleProducts.Result)
                        {
                            if (product.KategorieId == curentCategory)
                            {
                                <div class="produkt" @onclick="()=>AddPRoduktToOrderList(product)">
                                    <img src="@product.ProduktBild">
                                    <div class="produkt-name">@product.ProduktName</div>
                                    <div class="produkt-preis">€ @product.ProduktPreis</div>
                                </div>
                            }

                        }*@
                    </div>
                }


            </div>
            <div class="order-display light-box">
                <div class="dark-box">


                    @if (FakeDatabase.orderList.Count > 0)
                    {
                        @foreach (var product in FakeDatabase.orderList)
                        {
                            <div class="order-line">
                                <span>@product.Value.ToString()x</span>
                                <span>@product.Key.ProduktName</span>
                                <span>€ @(product.Key.ProduktPreis * product.Value)</span>
                                <div class="minus-button" style="cursor:pointer" @onclick="()=>FakeDatabase.RemoveProduct(product.Key)">-</div>
                                <div class="add-button" style="cursor:pointer" @onclick="()=>FakeDatabase.AddProduktToOrderList(product.Key)">+</div>
                            </div>
                        }
                    }

                </div>
                <div class="summ">
                    <span class="text">Summe:</span>
                    <span class="to-pay">€ @FakeDatabase.summ.ToString("0.00")</span>
                </div>
            </div>
            <div class="buttons-box light-box">

                <Button Href="/bezahlungs-page"
                        Icon="icon-coin-euro"
                        Name="WECHSELGELD"
                        IsDisabled=@(FakeDatabase.summ == 0) />

                <Button Href="/abschluss-page"
                        Icon="icon-checkmark"
                        Name="ABSCHLUSS"
                        IsDisabled=@(FakeDatabase.summ == 0)
                        OnClickAction="FakeDatabase.Cancel" />
            </div>
        </div>
    </div>

    <!-- Popup-Fenster -->
    @if (showPopup)
    {
        <div class="popup-container">
            <div class="popup-content">
                <h4>Achtung!!!</h4>
                <p>Wollen Sie wirklich stornieren?</p>
                <button class="m-button button-primary">Stornieren</button>  @*@onclick="HandleStorno" *@
                <button class="m-button button-primary" @onclick="ClosePopup">Abbrechen</button>
            </div>
        </div>
    }


</div>

@code {
    List<Kategorie> kategories = new List<Kategorie>();

    protected override async Task OnInitializedAsync()
    {
        await dbContext.AllProductsToListAsync();
        kategories = await dbContext.AllCategoriesToListAsync();
    }

    private void ShowId(int id)
    {
        curentCategory = id;
    }

    private int curentCategory = 0;

    //Popup start
    bool showPopup = false;

    void ShowPopup()
    {
        showPopup = true;
    }

    void ClosePopup()
    {
        showPopup = false;
    }
    //Popup end

    // Property für die Popup-Steuerung
    bool IsConfirmationPopupOpen { get; set; }

    // Methode zum Öffnen des Popups
    void ShowConfirmationPopup()
    {
        IsConfirmationPopupOpen = true;
    }

    // Methode zum Schließen des Popups
    void CloseConfirmationPopup()
    {
        IsConfirmationPopupOpen = false;
    }

    // Methode zum Behandeln der Storno-Aktion
    void HandleStorno()
    {
        // Fügen Sie hier den Code ein, der bei Storno ausgeführt werden soll
        CloseConfirmationPopup();
    }

    //public async Task AddPRoduktToOrderList(Produkt produkt)
    //{
    //    public Dictionary<Produkt, int> orderList = new Dictionary<Produkt, int>();

    //    if (!orderList.ContainsKey(produkt))
    //    {
    //        orderList.Add(produkt, 1);
    //    }
    //    else
    //    {
    //        orderList[produkt] += 1;
    //    }
    //    //TotalPriceCalculation();
    //}
}






