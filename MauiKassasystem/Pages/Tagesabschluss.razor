@page "/tages-abschluss"





<div class="dark-box admin-form-box">

    <div class="tagesabschluss">

        <label>Tagesabschluss:  </label>

        <div class="ausgabe">@tagesabschlussSumme €  </div>

    </div>

    <br />




    <div class="btn-wrapper">

        <div class="exportList">

            <label>Bestell-Liste:</label>
            <Button Href="/"
                    Icon="icon-export"
                    Name=" Exportieren" 
            OnClickAction="ExportVerkaufData" />
        </div>
    </div>
    <br />


    <div class="admin-form-btn">
        <Button Href="/"
                Name="ZURÜCK" />
    </div>



</div>









@code {
    List<Verkauf> posList = new List<Verkauf>();


    private decimal tagesabschlussSumme = 0.00m;

    protected override async Task OnInitializedAsync()
    {
        posList = await dbContext.VkPositionsToListAsync();
        var newPosList = posList.Where(x => x.Datum.Date == DateTime.Now.Date);
        foreach (var item in newPosList)
        {
            tagesabschlussSumme += item.Gesamtpreis;

        }
    }

    public async void ExportVerkaufData()
    {
        //string csvFilePath = Path.Combine("/storage/emulated/0/Documents/test1.csv");
        string csvFilePath = @"C:\Users\PC98FA9BFD51B5\source\repos\syryoga\test2.csv";
        await ExportVerkaufDataToCSV(csvFilePath);
    }

    public async Task ExportVerkaufDataToCSV(string csvFilePath)
    {
        //await InitDbAsync();

        // Abrufen der Daten aus der Tabelle "Verkauf"
        posList = await dbContext.VkPositionsToListAsync();
        var newPosList = posList.Where(x => x.Datum.Date == DateTime.Now.Date);

        // Header für die CSV-Datei erstellen
        string csvHeader = "VerkaufId;ProduktId;ProduktName;Anzahl;Einzelpreis;Gesamtpreis;Datum";

        // Datenzeilen für die CSV-Datei erstellen
        List<string> csvLines = newPosList.Select(v => $"{v.Id};{v.ProduktId};{v.ProduktName};{v.Anzahl};{v.Einzelpreis};{v.Gesamtpreis};{v.Datum.ToString("dd.MM.yyyy HH:mm:ss")}").ToList();

        // Gesamten Inhalt für die CSV-Datei erstellen
        string csvContent = $"{csvHeader}\n{string.Join("\n", csvLines)}";

        // CSV-Datei speichern
        File.WriteAllText(csvFilePath, csvContent);
    }
}
